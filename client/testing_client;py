import requests

BASE_URL = "http://localhost:5123"

# Predefined test user credentials
TEST_USER = {
    "username": "testuser",
    "password": "testpass",
    "email": "test@example.com",
    "token": "<your_token_here>"
}

def test_register():
    response = requests.post(f"{BASE_URL}/user/register", json={
        "username": TEST_USER["username"],
        "password": TEST_USER["password"],
        "email": TEST_USER["email"]
    })
    print("Register:", response.status_code, response.json())

def test_login():
    response = requests.post(f"{BASE_URL}user/login", json={
        "username": TEST_USER["username"],
        "password": TEST_USER["password"]
    })
    print("Login:", response.status_code, response.json())
    return response.json().get("session_token")

def test_fetch_chats(token):
    response = requests.get(f"{BASE_URL}/fetch-chats", headers={
        "Authorization": f"Bearer {token}"
    })
    print("Fetch Chats:", response.status_code, response.json())

def test_logout(token):
    response = requests.post(f"{BASE_URL}/logout", headers={
        "Authorization": f"Bearer {token}"
    })
    print("Logout:", response.status_code, response.json())

def test_update_profile(token):
    response = requests.put(f"{BASE_URL}/update-profile", headers={
        "Authorization": f"Bearer {token}"
    }, json={
        "email": "updated@example.com"
    })
    print("Update Profile:", response.status_code, response.json())

def test_delete_account(token):
    response = requests.delete(f"{BASE_URL}/delete-account", headers={
        "Authorization": f"Bearer {token}"
    })
    print("Delete Account:", response.status_code, response.json())

def main():
    print("Starting tests for all routes...\n")

    # Test Register
    test_register()

    # Test Login
    token = test_login()

    if token:
        # Test Fetch Chats
        test_fetch_chats(token)

        # Test Logout
        test_logout(token)

        # Test Update Profile
        test_update_profile(token)

        # Test Delete Account
        test_delete_account(token)
    else:
        print("Login failed. Skipping token-based tests.")

if __name__ == "__main__":
    main()